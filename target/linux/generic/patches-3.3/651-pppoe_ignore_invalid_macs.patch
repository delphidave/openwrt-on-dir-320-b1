Index: linux-3.8.12/drivers/net/ppp/pppoe.c
===================================================================
--- linux-3.8.12.orig/drivers/net/ppp/pppoe.c	2013-06-26 20:46:16.631185878 +0400
+++ linux-3.8.12/drivers/net/ppp/pppoe.c	2013-06-26 21:00:33.216058179 +0400
@@ -468,6 +468,7 @@
 	struct pppoe_hdr *ph;
 	struct pppox_sock *po;
 	struct pppoe_net *pn;
+	int cmp, cmp1;
 
 	skb = skb_share_check(skb, GFP_ATOMIC);
 	if (!skb)
@@ -482,7 +483,14 @@
 
 	pn = pppoe_pernet(dev_net(dev));
 	po = get_item(pn, ph->sid, eth_hdr(skb)->h_source, dev->ifindex);
-	if (po) {
+	cmp = memcmp(skb->mac.ethernet->h_dest, dev->dev_addr, ETH_ALEN);
+	cmp1 = po == NULL;
+	printk(KERN_DEBUG "PADT dev_addr=%02x:%02x:%02x:%02x:%02x:%02x h_dest: %02x:%02x:%02x:%02x:%02x:%02x cmp: %d cmp1: %d\n",
+		dev->dev_addr[0],dev->dev_addr[1],dev->dev_addr[2],
+		dev->dev_addr[3],dev->dev_addr[4],dev->dev_addr[5],
+		skb->mac.ethernet->h_dest[0], skb->mac.ethernet->h_dest[1],skb->mac.ethernet->h_dest[2],
+		skb->mac.ethernet->h_dest[3],skb->mac.ethernet->h_dest[4],skb->mac.ethernet->h_dest[5], cmp, cmp1);
+	if ( po && (cmp == 0) ) {
 		struct sock *sk = sk_pppox(po);
 
 		bh_lock_sock(sk);
