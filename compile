#!/bin/sh
CPUs=`cat /proc/cpuinfo | grep processor | wc -l`
JOBS=`expr $CPUs + 1`

prepare () {
cp -rf ./copy-patch/* .
./scripts/feeds update -a && ./scripts/feeds install -a
make defconfig
sed -i -f select_arch.sed .config
make defconfig
sed -i -f select_main_soft.sed .config
make defconfig
sed -i -f select_main_soft_st2.sed .config
make defconfig
}

compile_standart () {
make V=99 -j $1
cp bin/ramips/openwrt-ramips-rt305x-dir-320-b1-squashfs-sysupgrade.bin openwrt-BB-std-`date +%Y.%m.%d`.bin
}

compile_oscam() {
sed -i -f select_mpcs.sed .config
make defconfig
make V=99 -j $1
cp bin/ramips/openwrt-ramips-rt305x-dir-320-b1-squashfs-sysupgrade.bin openwrt-BB-mpcs-`date +%Y.%m.%d`.bin
}

compile_mpcs() {
sed -i -f select_oscam.sed .config
make defconfig
sed -i -f select_oscam_st2.sed .config
make defconfig
make V=99 -j $1
cp bin/ramips/openwrt-ramips-rt305x-dir-320-b1-squashfs-sysupgrade.bin openwrt-BB-oscam-`date +%Y.%m.%d`.bin
}

compile_all() {
compile_standart $1
compile_mpcs $1
compile_oscam $1
}

usage () {
cat << EOF
Usage: $0 <variant> [jobs]
Variants are:
standart - build without mpcs and oscam
mpcs - build with mpcs
oscam - build with oscam
all - compile all variants
Jobs - number of jobs (default: number of CPU's + 1)
EOF
}

[ -n "$2" ] && JOBS=$2
prepare
case "$1" in
	"all")
	compile_all $JOBS
	;;
	"standart")
	compile_standart $JOBS
	;;
	"oscam")
	compile_oscam $JOBS
	;;
	"mpcs")
	compile_mpcs $JOBS
	;;
	*)
	echo "Invalid variant $1"
	usage
	;;
esac
